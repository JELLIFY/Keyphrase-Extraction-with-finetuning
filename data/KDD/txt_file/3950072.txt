efficient mining of iterative patterns for software specification discovery studies have shown that program comprehension takes up to 45 % of software development costs . such high costs are caused by the lack-of documented specification and further aggravated by the phenomenon of software evolution . there is a need for automated tools to extract specifications to aid program comprehension . in this paper , a novel technique to efficiently mine common software temporal patterns from traces is proposed . these patterns shed light on program behaviors , and are termed iterative patterns . they capture unique characteristic of software traces , typically not found in arbitrary sequences . specifically , due to loops , interesting iterative patterns can occur multiple times within a trace . furthermore , an occurrence of an iterative pattern in a trace can extend across a sequence of indefinite length . since a program behavior can be manifested in numerous ways , analyzing a single trace will not be sufficient . iterative pattern mining extends sequential pattern and episode minings to discover frequent iterative patterns which occur repetitively both within a program trace and across multiple traces . in this paper , we present cliper ( closed iterative pattern miner ) to efficiently mine a closed set of iterative patterns . a performance study on several simulated and real datasets shows the efficiency of our mining algorithm and effectiveness of our pruning strategy . our case study on jboss application server confirms the usefulness of mined patterns in discovering interesting software behavioral specification .