how to make a semantic web browser two important architectural choices underlie the success of the web : numerous , independently operated servers speak a common protocol , and a single type of client the web browser provides point-and-click access to the content and services on these decentralized servers . however , because html marries content and presentation into a single representation , end users are often stuck with inappropriate choices made by the web site designer of how to work with and view the content . rdf metadata on the semantic web does not have this limitation : users can gain direct access to information and control over how it is presented . this principle forms the basis for our semantic web browser an end user application that automatically locates metadata and assembles point-and-click interfaces from a combination of relevant information , ontological specifications , and presentation knowledge , all described in rdf and retrieved dynamically from the semantic web . because data and services are accessed directly through a standalone client and not through a central point of access ( e.g. , a portal ) , new content and services can be consumed as soon as they become available . in this way we take advantage of an important sociological force that encourages the production of new semantic web content while remaining faithful to the decentralized nature of the web . 