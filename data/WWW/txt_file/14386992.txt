counting beyond a yottabyte , or how sparql 1.1 property paths will prevent adoption of the standard sparql - the standard query language for querying rdf - provides only limited navigational functionalities , although these features are of fundamental importance for graph data formats such as rdf . this has led the w3c to include the property path feature in the upcoming version of the standard , sparql 1.1 . we tested several implementations of sparql 1.1 handling property path queries , and we observed that their evaluation methods for this class of queries have a poor performance even in some very simple scenarios . to formally explain this fact , we conduct a theoretical study of the computational complexity of property paths evaluation . our results imply that the poor performance of the tested implementations is not a problem of these particular systems , but of the specification itself . in fact , we show that any implementation that adheres to the sparql 1.1 specification ( as of november 2011 ) is doomed to show the same behavior , the key issue being the need for counting solutions imposed by the current specification . we provide several intractability results , that together with our empirical results , provide strong evidence against the current semantics of sparql 1.1 property paths . finally , we put our results in perspective , and propose a natural alternative semantics with tractable evaluation , that we think may lead to a wide adoption of the language by practitioners , developers and theoreticians . 