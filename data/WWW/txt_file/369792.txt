decentralized orchestration of composite web services web services make information and software available programmatically via the internet and may be used as building blocks for applications . a composite web service is one that is built using multiple component web services and is typically specified using a language such as bpel4ws or wsipl . once its specification has been developed , the composite service may be orchestrated either in a centralized or in a decentralized fashion . decentralized orchestration offers performance improvements in terms of increased throughput and scalability and lower response time . however , decentralized orchestration also brings additional complexity to the system in terms of error recovery and fault handling . further , incorrect design of a decentralized system can lead to potential deadlock or non-optimal usage of system resources . this paper investigates build time and runtime issues related to decentralized orchestration of composite web services . we support our design decisions with performance results obtained on a decentralized setup using bpel4ws to describe the composite web services and bpws4j as the underlying runtime environment to orchestrate them . 