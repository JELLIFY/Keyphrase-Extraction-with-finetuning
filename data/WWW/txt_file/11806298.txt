hyperanf : approximating the neighborhood function of very large graphs on a budget the neighborhood function ng ( t ) of a graph g gives , for each t âˆˆ n , the number of pairs of nodes x , y such that y is reachable from x in less that t hops . the neighborhood function provides a wealth of information about the graph ( 10 ) ( e.g. , it easily allows one to compute its diameter ) , but it is very expensive to compute it exactly . recently , the anf algorithm ( 10 ) ( approximate neighborhood function ) has been proposed with the purpose of approximating ng ( t ) on large graphs . we describe a breakthrough improvement over anf in terms of speed and scalability . our algorithm , called hyperanf , uses the new hyperloglog counters ( 5 ) and combines them efficiently through broadword programming ( 8 ) ; our implementation uses talk decomposition to exploit multi-core parallelism . with hyperanf , for the first time we can compute in a few hours the neighborhood function of graphs with billions of nodes with a small error and good confidence using a standard workstation . then , we turn to the study of the distribution of the distances between reachable nodes ( that can be efficiently approximated by means of hyperanf ) , and discover the surprising fact that its index of dispersion provides a clear-cut characterisation of proper social networks vs. web graphs . we thus propose the spid ( shortest-paths index of dispersion ) of a graph as a new , informative statistics that is able to discriminate between the above two types of graphs . we believe this is the first proposal of a significant new non-local structural index for complex networks whose computation is highly scalable . 