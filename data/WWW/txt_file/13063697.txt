rewriting queries on sparql views the problem of answering sparql queries over virtual sparql views is commonly encountered in a number of settings , including while enforcing security policies to access rdf data , or when integrating rdf data from disparate sources . we approach this problem by rewriting sparql queries over the views to equivalent queries over the underlying rdf data , thus avoiding the costs entailed by view materialization and maintenance . we show that sparql query rewriting combines the most challenging aspects of rewriting for the relational and xml cases : like the relational case , sparql query rewriting requires synthesizing multiple views ; like the xml case , the size of the rewritten query is exponential to the size of the query and the views . in this paper , we present the first native query rewriting algorithm for sparql . for an input sparql query over a set of virtual sparql views , the rewritten query resembles a union of conjunctive queries and can be of exponential size . we propose optimizations over the basic rewriting algorithm to ( i ) minimize each conjunctive query in the union ; ( ii ) eliminate conjunctive queries with empty results from evaluation ; and ( iii ) efficiently prune out big portions of the search space of empty rewritings . the experiments , performed on two rdf stores , show that our algorithms are scalable and independent of the underlying rdf stores . furthermore , our optimizations have order of magnitude improvements over the basic rewriting algorithm in both the rewriting size and evaluation time . 