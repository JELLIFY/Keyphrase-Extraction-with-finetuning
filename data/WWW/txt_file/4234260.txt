enforcing strict model-view separation in template engines the mantra of every experienced web application developer is the same : thou shalt separate business logic from display . ironically , almost all template engines allow violation of this separation principle , which is the very impetus for html template engine development . this situation is due mostly to a lack of formal definition of separation and fear that enforcing separation emasculates a template 's power . i show that not only is strict separation a worthy design principle , but that we can enforce separation while providing a potent template engine . i demonstrate my stringtemplate engine , used to build jguru.com and other commercial sites , at work solving some nontrivial generational tasks . my goal is to formalize the study of template engines , thus , providing a common nomenclature , a means of classifying template generational power , and a way to leverage interesting results from formal language theory . i classify three types of restricted templates analogous to chomsky 's type 1 . .3 grammar classes and formally define separation including the rules that embody separation . because this paper provides a clear definition of model-view separation , template engine designers may no longer blindly claim enforcement of separation . moreover , given theoretical arguments and empirical evidence , programmers no longer have an excuse to entangle model and view . 