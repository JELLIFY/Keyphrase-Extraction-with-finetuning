an evaluation of tcp splice benefits in web proxy servers this study is the first to evaluate the performance benefits of using the recently proposed tcp splice kernel service in web proxy servers . previous studies show that splicing client and server tcp connections in the ip layer improves the throughput of proxy servers like firewalls and content routers by reducing the data transfer overheads . in a web proxy server , data transfer overheads represent a relatively large fraction of the request processing overheads , in particular when content is not cacheable or the proxy cache is memory-based . the study is conducted with a socket-level implementation of tcp splice . compared to ip-level implementations , socket-level implementations make possible the splicing of connections with different tcp characteristics , and improve response times by reducing recovery delay after a packet loss . the experimental evaluation is focused on http request types for which the proxy can fully exploit the tcp splice service , which are the requests for non-cacheabl . content and ssl tunneling . the experimental testbed includes an emulated wan environment and benchmark applications for http\/1 .0 web client , web server , and web proxy running on aix rs\/6000 machines . our experiments demonstrate that tcp splice enables reductions in cpu utilization of 10-43 % of the cpu , depending on file sizes and request rates . larger relative reductions are observed when tunneling ssl connections , in particular for small file transfers . response times are also reduced by up to 1.8 sec . 