on the analysis of cascading style sheets developing and maintaining cascading style sheets ( css ) is an important issue to web developers as they suffer from the lack of rigorous methods . most existing means rely on validators that check syntactic rules , and on runtime debuggers that check the behavior of a css style sheet on a particular document instance . however , the aim of most style sheets is to be applied to an entire set of documents , usually defined by some schema . to this end , a css style sheet is usually written w.r.t. a given schema . while usual debugging tools help reducing the number of bugs , they do not ultimately allow to prove properties over the whole set of documents to which the style sheet is intended to be applied . we propose a novel approach to fill this lack . we introduce ideas borrowed from the fields of logic and compile-time verification for the analysis of css style sheets . we present an original tool based on recent advances in tree logics . the tool is capable of statically detecting a wide range of errors ( such as empty css selectors and semantically equivalent selectors ) , as well as proving properties related to sets of documents ( such as coverage of styling information ) , in the presence or absence of schema information . this new tool can be used in addition to existing runtime debuggers to ensure a higher level of quality of css style sheets . 