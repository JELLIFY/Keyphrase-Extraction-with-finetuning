turning portlets into services : the consumer profile portlets strive to play at the front end the same role that web services currently enjoy at the back end , namely , enablers of application assembly through reusable services . however , it is well-known in the component community that , the larger the component , the more reduced the reuse . hence , the coarse-grained nature of portlets ( they encapsulate also the presentation layer ) can jeopardize this vision of portlets as reusable services . to avoid this situation , this work proposes a perspective shift in portlet development by introducing the notion of consumer profile . while the user profile characterizes the end user ( e.g. age , name , etc ) , the consumer profile captures the idiosyncrasies of the organization through which the portlet is being delivered ( e.g. the portal owner ) as far as the portlet functionality is concerned . the user profile can be dynamic and hence , requires the portlet to be customized at runtime . by contrast , the consumer profile is known at registration time , and it is not always appropriate\/possible to consider it at runtime . rather , it is better to customize the code at development time , and produce an organization-specific portlet which built-in , custom functionality . in this scenario , we no longer have a portlet but a family of portlets , and the portlet provider becomes the `` assembly line '' of this family . this work promotes this vision by introducing an organization-aware , wsrpcompliant architecture that let portlet consumers registry and handle `` family portlets '' in the same way that `` traditional portlets '' . in so doing , portlets are nearer to become truly reusable services . 