managing versions of web documents in a transaction-time web server this paper presents a transaction-time http server , called ttapache that supports document versioning . a document often consists of a main file formatted in html or xml and several included files such as images and stylesheets . a change to any of the files associated with a document creates a new version of that document . to construct a document version history , snapshots of the document 's files are obtained over time . transaction times are associated with each file version to record the version 's lifetime . the transaction time is the system time of the edit that created the version . accounting for transaction time is essential to supporting audit queries that delve into past document versions and differential queries that pinpoint differences between two versions . ttapache performs automatic versioning when a document is read thereby removing the burden of versioning from document authors . since some versions may be created but never read , ttapache distinguishes between known and assumed versions of a document . ttapache has a simple query language to retrieve desired versions . a browser can request a specific version , or the entire history of a document . queries can also rewrite links and references to point to current or past versions . over time , the version history of a document continually grows . to free space , some versions can be vacuumed . vacuuming a version however changes the semantics of requests for that version . this paper presents several policies for vacuuming versions and strategies for accounting for vacuumed versions in queries . 