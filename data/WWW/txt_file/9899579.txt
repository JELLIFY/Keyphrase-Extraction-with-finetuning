characterizing insecure javascript practices on the web javascript is an interpreted programming language most often used for enhancing webpage interactivity and functionality . it has powerful capabilities to interact with webpage documents and browser windows , however , it has also opened the door for many browser-based security attacks . insecure engineering practices of using javascript may not directly lead to security breaches , but they can create new attack vectors and greatly increase the risks of browser-based attacks . in this paper , we present the first measurement study on insecure practices of using javascript on the web . our focus is on the insecure practices of javascript inclusion and dynamic generation , and we examine their severity and nature on 6,805 unique websites . our measurement results reveal that insecure javascript practices are common at various websites : ( 1 ) at least 66.4 % of the measured websites manifest the insecure practices of including javascript files from external domains into the top-level documents of their webpages ; ( 2 ) over 44.4 % of the measured websites use the dangerous eval ( ) function to dynamically generate and execute javascript code on their webpages ; and ( 3 ) in javascript dynamic generation , using the document . write ( ) method and the innerhtml property is much more popular than using the relatively secure technique of creating script elements via dom methods . our analysis indicates that safe alternatives to these insecure practices exist in common cases and ought to be adopted by website developers and administrators for reducing potential security risks . 