optimizing scoring functions and indexes for proximity search in type-annotated corpora we introduce a new , powerful class of text proximity queries : find an instance of a given `` answer type '' ( person , place , distance ) near `` selector '' tokens matching given literals or satisfying given ground predicates . an example query is type = distance near hamburg munich . nearness is defined as a flexible , trainable parameterized aggregation function of the selectors , their frequency in the corpus , and their distance from the candidate answer . such queries provide a key data reduction step for information extraction , data integration , question answering , and other text-processing applications . we describe the architecture of a next-generation information retrieval engine for such applications , and investigate two key technical problems faced in building it . first , we propose a new algorithm that estimates a scoring function from past logs of queries and answer spans . plugging the scoring function into the query processor gives high accuracy : typically , an answer is found at rank 2-4 . second , we exploit the skew in the distribution over types seen in query logs to optimize the space required by the new index structures required by our system . extensive performance studies with a 10gb , 2-million document trec corpus and several hundred trec queries show both the accuracy and the efficiency of our system . from an initial 4.3 gb index using 18,000 types from wordnet , we can discard 88 % of the space , while inflating query times by a factor of only 1.9 . our final index overhead is only 20 % of the total index space needed . 