monitoring the dynamic web to respond to continuous queries continuous queries are queries for which responses given to users must be continuously updated , as the sources of interest get updated . such queries occur , for instance , during on-line decision making , e.g. , traffic flow control , weather monitoring , etc. . the problem of keeping the responses current reduces to the problem of deciding how often to visit a source to determine if and how it has been modified , in order to update earlier responses accordingly . on the surface , this seems to be similar to the crawling problem since crawlers attempt to keep indexes up-to-date as pages change and users pose search queries . we show that this is not the case , both due to the inherent differences between the nature of the two problems as well as the performance metric . we propose , develop and evaluate a novel multi-phase ( continuous adaptive monitoring ) ( cam ) solution to the problem of maintaining the currency of query results . some of the important phases are : the tracking phase , in which changes , to an initially identified set of relevant pages , are tracked . from the observed change characteristics of these pages , a probabilistic model of their change behavior is formulated and weights are assigned to pages to denote their importance for the current queries . during the next phase , the resource allocation phase , based on these statistics , resources , needed to continuously monitor these pages for changes , are allocated . given these resource allocations , the scheduling phase produces an optimal achievable schedule for the monitoring tasks . an experimental evaluation of our approach compared to prior approaches for crawling dynamic web pages shows the effectiveness of cam for monitoring dynamic changes . for example , by monitoring just 5 % of the page changes , cam is able to return 90 % of the changed information to the users . the experiments also produce some interesting observations pertaining to the differences between the two problems of crawling -- to build an index -- and the problem of change tracking -- to respond to continuous queries . 