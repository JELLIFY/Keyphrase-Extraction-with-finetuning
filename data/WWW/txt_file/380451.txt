expressiveness of xsds : from practice to theory , there and back again on an abstract level , xml schema increases the limited expressive power of document type definitions ( dtds ) by extending them with a recursive typing mechanism . however , an investigation of the xml schema definitions ( xsds ) occurring in practice reveals that the vast majority of them are structurally equivalent to dtds . this might be due to the complexity of the xml schema specification and the difficulty to understand the effect of constraints on typing and validation of schemas . to shed some light on the actual expressive power of xsds this paper studies the impact of the element declarations consistent ( edc ) and the unique particle attribution ( upa ) rule . an equivalent formalism based on contextual patterns rather than on recursive types is proposed which might serve as a light-weight front end for xml schema . finally , the effect of edc and upa on the way xml documents can be typed is discussed . it is argued that a cleaner , more robust , stronger but equally efficient class is obtained by replacing edc and upa with the notion of 1-pass preorder typing : schemas that allow to determine the type of an element of a streaming document when its opening tag is met . this notion can be defined in terms of restrained competition regular expressions and there is again an equivalent syntactical formalism based on contextual patterns . 